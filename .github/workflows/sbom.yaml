name: Generate SBOM and run OSV-Scanner

on:
  pull_request:
    types: [ opened, synchronize, reopened ]
  workflow_dispatch:

jobs:
  sbom:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Install snapd
        run: sudo apt install snapd

      - name: Install jq
        run: sudo apt-get install jq

      - name: Install OSV-Scanner
        run : sudo snap install osv-scanner

      - name: Install SSH Key # this is necessary for Composer to be able to clone source from pimcore/ee-pimcore
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY_PIMCORE_DEPLOYMENTS_USER }}
          known_hosts: ".... we add this in the next step ;-)"

      - name: "Add authentication for private pimcore packages"
        run: |
          composer config repositories.private-packagist composer https://repo.pimcore.com/github-actions/
          composer config --global --auth http-basic.repo.pimcore.com github-actions ${{ secrets.COMPOSER_PIMCORE_REPO_PACKAGIST_TOKEN }}

      - name: Read and modify composer.json
        id: update_composer
        run: |
          original_content=$(<composer.json)
          for conflict in $(echo "$original_content" | jq -r '.conflict | to_entries[] | @base64'); do
            _jq() {
              echo ${conflict} | base64 --decode | jq -r ${1}
            }
            package_name=$(_jq '.key')
            composer require "$package_name:*" --no-update
          done

      - name: Upload SBOM as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: composer
          path: composer_test.json

      - name: Allow SBOM Plugin
        run: composer config --no-plugins allow-plugins.cyclonedx/cyclonedx-php-composer true

      - name: Install SBOM Plugin
        run: composer require cyclonedx/cyclonedx-php-composer

      - name: CREATE SBOM
        run: composer CycloneDX:make-sbom --output-file=sbom.json --output-format=json

      - name: Upload SBOM as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: sbom.json

      - name: Run OSV-Scanner
        id: osvscanner
        run: osv-scanner --sbom=sbom.json --output=osv-results.txt

      - name: Create fail comment
        uses: peter-evans/create-or-update-comment@v4
        if: ${{ failure() && steps.osvscanner.conclusion == 'failure' }}
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body-path: 'osv-results.txt'

      - name: Upload SBOM as an artifact
        if: ${{ failure() && steps.osvscanner.conclusion == 'failure' }}
        uses: actions/upload-artifact@v4
        with:
          name: osv
          path: osv-results.txt